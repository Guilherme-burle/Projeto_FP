import os
os.system('cls')

def salvar_treino(treino):
    with open("treinos.txt", "a") as file:
        file.write(f"{treino['Data']},{treino['Distância']},{treino['Tempo']},{treino['Localização']},{treino['Clima']}\n")

def carregar_treinos():
    treinos = []
    try:
        with open("treinos.txt", "r") as file:
            for linha in file:
                data, distancia, tempo, localizacao, clima = linha.strip().split(",")
                treinos.append({
                    "Data": data,
                    "Distância": float(distancia),
                    "Tempo": int(tempo),
                    "Localização": localizacao,
                    "Clima": clima
                })
    except FileNotFoundError:
        print("Arquivo de treinos não encontrado. Um novo será criado ao adicionar dados.")
    except ValueError:
        print("Erro ao processar dados do treino. Verifique o formato do arquivo.")
    return treinos

def adicionar_treino():
    try:
        data = input("Digite a data (DD/MM/AAAA): ")
        distancia = float(input("Digite a distância em km: "))
        tempo = int(input("Digite o tempo em minutos: "))
        localizacao = input("Digite a localização: ")
        clima = input("Digite as condições climáticas: ")

        treino = {
            "Data": data,
            "Distância": distancia,
            "Tempo": tempo,
            "Localização": localizacao,
            "Clima": clima
        }
        salvar_treino(treino)
        print("Treino registrado com sucesso!")
    except ValueError:
        print("Erro: Insira um número válido para distância e tempo.")

def visualizar_treinos():
    treinos = carregar_treinos()
    if not treinos:
        print("Nenhum treino registrado ainda.")
    else:
        for treino in treinos:
            print(f"Data: {treino['Data']}, Distância: {treino['Distância']} km, Tempo: {treino['Tempo']} min, Localização: {treino['Localização']}, Clima: {treino['Clima']}")

def atualizar_treino():
    data = input("Digite a data do treino que deseja atualizar (DD/MM/AAAA): ")
    treinos = carregar_treinos()
    encontrado = False
    for treino in treinos:
        if treino["Data"] == data:
            try:
                treino["Distância"] = float(input("Nova distância em km: "))
                treino["Tempo"] = int(input("Novo tempo em minutos: "))
                treino["Localização"] = input("Nova localização: ")
                treino["Clima"] = input("Novas condições climáticas: ")
                encontrado = True
                break
            except ValueError:
                print("Erro: Insira um número válido para distância e tempo.")
                return
    if encontrado:
        with open("treinos.txt", "w") as file:
            for t in treinos:
                file.write(f"{t['Data']},{t['Distância']},{t['Tempo']},{t['Localização']},{t['Clima']}\n")
        print("Treino atualizado com sucesso!")
    else:
        print("Treino não encontrado.")

def excluir_treino():
    data = input("Digite a data do treino que deseja excluir (DD/MM/AAAA): ")
    treinos = carregar_treinos()
    treinos = [treino for treino in treinos if treino["Data"] != data]

    if len(treinos) < len(carregar_treinos()):
        with open("treinos.txt", "w") as file:
            for treino in treinos:
                file.write(f"{treino['Data']},{treino['Distância']},{treino['Tempo']},{treino['Localização']},{treino['Clima']}\n")
        print("Treino excluído com sucesso!")
    else:
        print("Treino não encontrado.")
def filtrar_por_distancia():
    try:
        distancia_min = float(input("Digite a distância mínima (km): "))
        distancia_max = float(input("Digite a distância máxima (km): "))
        treinos = carregar_treinos()
        filtrados = [treino for treino in treinos if distancia_min <= treino["Distância"] <= distancia_max]
        if filtrados:
            for treino in filtrados:
                print(f"Data: {treino['Data']}, Distância: {treino['Distância']} km, Tempo: {treino['Tempo']} min")
        else:
            print("Nenhum treino encontrado nesse intervalo.")
    except ValueError:
        print("Erro: Insira um número válido para distância.")
